class o{constructor(e,i,s="login"){this.mode=s,this.view=e,this.model=i}render(){return this.view.render(this.mode)}async init(){this.mode==="login"?this.view.setupLoginForm(this.handleLogin.bind(this),e=>this.view.focusErrorElement("login-email",e)):this.view.setupRegisterForm(this.handleRegister.bind(this),e=>this.view.focusErrorElement("register-name",e)),this.view.focusFirstInteractiveElement()}async handleLogin(e){try{const i=e.get("email"),s=e.get("password");await this.model.login({email:i,password:s}),this.view.goToPage("/")}catch(i){this.view.showError(i.message||"Login failed","login-form")}}async handleRegister(e){try{const i=e.get("name"),s=e.get("email"),t=e.get("password");await this.model.register({name:i,email:s,password:t}),this.view.showSuccess("Registration successful! Please login"),this.view.goToPage("/login")}catch(i){this.view.showError(i.message||"Registration failed","register-form")}}}export{o as AuthPresenter};
