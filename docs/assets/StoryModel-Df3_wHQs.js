import{S as h,U as n,A as c}from"./index-CKSsnL6G.js";class d{constructor(){this.storyDatabase=new h}async getAllStories(){try{const t=n.getToken();if(!t)throw new Error("Authentication required");try{const e=await fetch(`${c}/stories`,{headers:{Authorization:`Bearer ${t}`}}),o=await e.json();if(!e.ok)throw new Error(o.message);const r=o.listStory||[];return await this.storyDatabase.saveStories(r),r}catch(e){console.log("Network error, fetching from IndexedDB",e);const o=await this.storyDatabase.getStories();if(o&&o.length>0)return o;const r=this.getDummyStories();return await this.storyDatabase.saveStories(r),r}}catch(t){throw new Error("Failed to fetch stories: "+t.message)}}getDummyStories(){return[{id:"dummy-1",name:"User Demo",description:"Ini adalah cerita dummy untuk penggunaan offline.",photoUrl:"https://picsum.photos/id/237/500/300",createdAt:new Date().toISOString(),lat:-6.2088,lon:106.8456},{id:"dummy-2",name:"User Demo",description:"Cerita dummy kedua untuk penggunaan offline.",photoUrl:"https://picsum.photos/id/238/500/300",createdAt:new Date(Date.now()-864e5).toISOString(),lat:-6.1751,lon:106.865},{id:"dummy-3",name:"User Demo",description:"Cerita dummy ketiga untuk penggunaan offline.",photoUrl:"https://picsum.photos/id/239/500/300",createdAt:new Date(Date.now()-1728e5).toISOString(),lat:-6.2,lon:106.83}]}async getStoryById(t){try{const e=n.getToken();if(!e)throw new Error("Authentication required");try{const o=await fetch(`${c}/stories/${t}`,{headers:{Authorization:`Bearer ${e}`}}),r=await o.json();if(!o.ok)throw new Error(r.message);const i=r.story;return await this.storyDatabase.saveStories([i]),i}catch(o){console.log("Network error, fetching from IndexedDB",o);const r=await this.storyDatabase.getStoryById(t);if(r)return r;if(t.startsWith("dummy-")){const a=this.getDummyStories().find(s=>s.id===t);if(a)return a}throw new Error("Failed to fetch story: No offline data available")}}catch(e){throw new Error("Failed to fetch story: "+e.message)}}async addStory(t){try{const e=n.getToken();if(!e)throw new Error("Authentication required");try{const o=await fetch(`${c}/stories`,{method:"POST",headers:{Authorization:`Bearer ${e}`},body:t}),r=await o.json();if(!o.ok)throw new Error(r.message);return r.story}catch(o){console.log("Network error, saving offline",o);const r={};return t.forEach((a,s)=>{s==="photo"?(r[s]=URL.createObjectURL(a),r.photoBlob=a):r[s]=a}),{...await this.storyDatabase.saveOfflineStory(r),isOffline:!0}}}catch(e){throw new Error("Failed to add story: "+e.message)}}async getFavoriteStories(){try{return await this.storyDatabase.getFavoriteStories()}catch(t){throw new Error("Failed to get favorite stories: "+t.message)}}async toggleFavorite(t){try{return await this.storyDatabase.isStoryFavorite(t.id)?(await this.storyDatabase.removeFavoriteStory(t.id),!1):(await this.storyDatabase.saveFavoriteStory(t),!0)}catch(e){throw new Error("Failed to toggle favorite: "+e.message)}}async getOfflineStories(){try{return await this.storyDatabase.getOfflineStories()}catch(t){throw new Error("Failed to get offline stories: "+t.message)}}async deleteOfflineStory(t){try{return await this.storyDatabase.deleteOfflineStory(t)}catch(e){throw new Error("Failed to delete offline story: "+e.message)}}}export{d as StoryModel};
